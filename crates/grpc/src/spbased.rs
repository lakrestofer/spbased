// This file is @generated by prost-build.
/// the container for any review item
/// contains the data neccessary to schedule it
/// together with the untyped json data
/// of the specific item type (flashcards contain different data
/// from e.g a book)
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ReviewItem {
    #[prost(int32, tag = "1")]
    pub id: i32,
    #[prost(float, tag = "2")]
    pub stability: f32,
    #[prost(float, tag = "3")]
    pub difficulty: f32,
    #[prost(string, tag = "4")]
    pub last_review: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub due: ::prost::alloc::string::String,
    #[prost(int32, tag = "6")]
    pub reviews: i32,
    #[prost(int32, tag = "7")]
    pub failed_reviews: i32,
    #[prost(message, optional, tag = "8")]
    pub item_type: ::core::option::Option<ItemType>,
    #[prost(string, tag = "9")]
    pub data: ::prost::alloc::string::String,
}
/// we can multiple types
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ItemType {
    #[prost(int32, tag = "1")]
    pub id: i32,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Tag {
    #[prost(int32, tag = "1")]
    pub id: i32,
    #[prost(string, tag = "2")]
    pub content: ::prost::alloc::string::String,
}
